@model LibraryBooks.Models.Profile.UserProfileViewModel;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewBag.Title = $"Профиль пользователя {Model?.User.FirstName} {Model?.User.LastName}";
}

@* <div class="rounded-circle d-flex align-items-center justify-content-center " style="max-width: 150px; height: 150px; overflow: hidden;">
    <img src="@Url.Content(Model.User?.GetImagePathOrDefault())" class="img-fluid" alt="@Model.User?.FirstName">
</div> *@
<div class="container mt-5 overflow-hidden">
    <div class="row justify-content-center">
            <div class="col-md-12">
                <div class="row">
                    <div class="col">
                        <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center" style="min-height: 54.4px;">
                                <h5 class="card-title">Информация о пользователе</h5>
                                <a href="/Profile/Edit" class="btn btn-primary">Редактировать</a>
                            </div>
                            <div class="card-body">
                                <div class="py-3 row justify-content-center">
                                    <div class="col-md-5 clearfix">
                                        <div class="d-flex justify-content-center">
                                            <div class="rounded-circle d-flex align-items-center justify-content-center " style="max-width: 150px; height: 150px; overflow: hidden;">
                                            <img src="@Url.Content(Model.User?.GetImagePathOrDefault())" class="img-fluid" style="object-fit: cover; width: 150px; height: 150px;" alt="@Model.User?.FirstName">
                                            </div>
                                        </div>
                                        <ul class="list-group list-group-flush">
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                Имя: <span class="text-secondary">@Model.User.FirstName</span>
                                            </li>
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                Фамилия: <span class="text-secondary">@Model.User.LastName</span>
                                            </li>
                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                            Логин: <span class="text-secondary">@Model.User.Login</span>
                                        </li>
                                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                                Email: <span class="text-secondary">@Model.User.Email</span>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            <div class="row py-5">
                    <div class="col">
                        <div class="col-md-12">
                            @if (Model.Borrows.Any())
                            {
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h5 class="card-title">Последние выданные книги</h5>
                                    </div>
                                    <div class="card-body">
                                        <table class="table table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Название книги</th>
                                                    <th>Дата займа</th>
                                                    <th>Дата возврата</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var borrow in Model.Borrows.Take(3))
                                                {
                                                    <tr>
                                                        <td>@borrow.Book.Title</td>
                                                        <td>@borrow.BorrowDate.ToShortDateString()</td>
                                                        <td>@(borrow.ReturnDate.HasValue ? borrow.ReturnDate.Value.ToString("dd.MM.yyyy") : "Не возвращена")</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <a href="@Url.Action("UserBorrows")" class="btn btn-secondary btn-block">Показать всё</a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        
    </div>
</div>