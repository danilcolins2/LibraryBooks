@model IEnumerable<LibraryBooks.Models.DbModels.User>
@{
    ViewBag.Title = "Список пользователей";
}

<div class="container mt-4">
    <h2 class="mb-4">Список пользователей</h2>

    <div class="form-group mb-3">
        <input type="text" id="SearchQuery" class="form-control" placeholder="Поиск по имени или фамилии">
    </div>

    <div id="noUsersFound" class="alert alert-warning" role="alert" style="display: none;">
        Пользователей, соответствующих запросу, не найдено.
    </div>

    <table class="table table-striped table-hover" id="userList">
        <thead>
            <tr>
                <th scope="col">Имя</th>
                <th scope="col">Фамилия</th>
                <th scope="col">Почта</th>
                <th scope="col">Роль</th>
                <th scope="col" class="text-center">Действия</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    @if (user.Role == LibraryBooks.Consts.Role.User)
                    {
                        <td>Пользователь</td>
                    }
                    else if (user.Role == LibraryBooks.Consts.Role.Admin)
                    {
                        <td>Администратор</td>
                    } else
                    {
                        <td></td>
                    }

                    <td class="text-center">
                        <div class="btn-group">
                            <a href="@Url.Action("BorrowBook", "Admin", new { userId = user.Id })" class="btn btn-outline-primary btn-sm">Выдать книгу</a>
                            <a href="@Url.Action("UserBorrows", "Admin", new { userId = user.Id })" class="btn btn-outline-primary btn-sm">Задолжности</a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    const searchQueryInput = document.getElementById("SearchQuery");
    const userList = document.getElementById("userList");
    const noUsersFoundMessage = document.getElementById("noUsersFound");

    function updateUserList() {
        const searchTerm = searchQueryInput.value.toLowerCase();

        const rows = Array.from(userList.querySelectorAll("tbody tr"));
        let hasMatches = false; // Флаг для проверки, есть ли совпадения

        rows.forEach(row => {
            const firstName = row.querySelector("td:nth-child(1)").textContent.toLowerCase();
            const lastName = row.querySelector("td:nth-child(2)").textContent.toLowerCase();
            if (firstName.includes(searchTerm) || lastName.includes(searchTerm)) {
                row.style.display = "";
                hasMatches = true; // Устанавливаем флаг, если есть совпадение
            } else {
                row.style.display = "none";
            }
        });

        if (hasMatches) {
            noUsersFoundMessage.style.display = "none"; // Скрываем сообщение, если есть совпадения
            userList.style.display = "";
        } else {
            noUsersFoundMessage.style.display = ""; // Отображаем сообщение, если нет совпадений
            userList.style.display = "none";
        }
    }

    searchQueryInput.addEventListener("input", updateUserList);
</script>